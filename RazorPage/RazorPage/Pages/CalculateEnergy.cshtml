@page
@model RazorPage.Pages.CalculateEnergyModel
@{
	ViewData["Title"] = "List Companies";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Electricity Consumption Calculator</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: Arial, sans-serif;
        background-color: #f0f4f8;
        min-height: 100vh;
        padding: 20px;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        background: #ffffff;
        border-radius: 10px;
        padding: 30px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    }

    h1 {
        text-align: center;
        color: #333;
        margin-bottom: 30px;
        font-size: 2.5rem;
    }

    .form-section {
        background: #ffffff;
        padding: 25px;
        border-radius: 10px;
        margin-bottom: 30px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        border: 1px solid #dce3e8;
    }

    .form-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }

    .form-group {
        display: flex;
        flex-direction: column;
    }

    label {
        font-weight: bold;
        color: #444;
        margin-bottom: 8px;
        font-size: 0.95rem;
    }

    input[type="number"] {
        padding: 12px 15px;
        border: 1px solid #ccc;
        border-radius: 8px;
        font-size: 16px;
        transition: all 0.3s ease;
        background: #fafafa;
    }

    input[type="number"]:focus {
        outline: none;
        border-color: #3f87a6;
        background: #fff;
        box-shadow: 0 0 0 2px rgba(63, 135, 166, 0.2);
    }

    .calculate-btn {
        background-color: #3f87a6;
        color: white;
        border: none;
        padding: 15px 40px;
        border-radius: 25px;
        font-size: 18px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: block;
        margin: 0 auto;
        min-width: 200px;
    }

    .calculate-btn:hover {
        background-color: #346f89;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(63, 135, 166, 0.2);
    }

    .results-section {
        display: none;
        margin-top: 30px;
    }

    .results-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .result-card {
        background-color: #3f87a6;
        color: white;
        padding: 25px;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease;
    }

    .result-card:hover {
        transform: translateY(-5px);
    }

    .result-value {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .result-label {
        font-size: 0.9rem;
        opacity: 0.9;
    }

    .chart-container {
        background: #ffffff;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        margin-bottom: 30px;
    }

    .recommendations {
        background: #ffffff;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .recommendations h3 {
        color: #333;
        margin-bottom: 20px;
        font-size: 1.5rem;
    }

    .recommendation-item {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 15px;
        border-left: 4px solid #3f87a6;
        transition: all 0.3s ease;
    }

    .recommendation-item:hover {
        background: #e6f0f4;
        transform: translateX(5px);
    }

    .recommendation-title {
        font-weight: bold;
        color: #333;
        margin-bottom: 5px;
    }

    .recommendation-savings {
        color: #2e7d32;
        font-weight: 600;
        font-size: 0.9rem;
    }
</style>

</head>
<body>
    <div class="container">
        <h1>⚡ Electricity Consumption Calculator</h1>

        <div class="form-section">
            <form id="electricityForm">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="kwh">Monthly consumption (kWh):</label>
                        <input type="number" id="kwh" step="0.1" min="0" required placeholder="E.g.: 350">
                    </div>

                    <div class="form-group">
                        <label for="price">Price per kWh (€):</label>
                        <input type="number" id="price" step="0.001" min="0" required placeholder="E.g.: 0.25" value="0.25">
                    </div>

                    <div class="form-group">
                        <label for="people">Number of people in the store:</label>
                        <input type="number" id="people" min="1" required placeholder="E.g.: 3" value="1">
                    </div>

                    <div class="form-group">
                        <label for="size">Store size (m²):</label>
                        <input type="number" id="size" min="1" required placeholder="E.g.: 80">
                    </div>

                    <div class="form-group">
                        <label for="heating">Electric heating (hours/day):</label>
                        <input type="number" id="heating" min="0" max="24" step="0.5" placeholder="E.g.: 6" value="0">
                    </div>

                    <div class="form-group">
                        <label for="ac">Air conditioning (hours/day):</label>
                        <input type="number" id="ac" min="0" max="24" step="0.5" placeholder="E.g.: 4" value="0">
                    </div>
                </div>

                <button type="submit" class="calculate-btn">Calculate Consumption and Savings</button>
            </form>
        </div>

        <div id="results" class="results-section">
            <div class="results-grid">
                <div class="result-card">
                    <div class="result-value" id="monthlyCost">0€</div>
                    <div class="result-label">Monthly Cost</div>
                </div>

                <div class="result-card">
                    <div class="result-value" id="yearlyCost">0€</div>
                    <div class="result-label">Yearly Cost</div>
                </div>

                <div class="result-card">
                    <div class="result-value" id="co2Emissions">0kg</div>
                    <div class="result-label">Monthly CO₂</div>
                </div>

                <div class="result-card">
                    <div class="result-value" id="efficiency">-</div>
                    <div class="result-label">Efficiency</div>
                </div>
            </div>

            <div class="chart-container">
                <canvas id="consumptionChart" width="400" height="200"></canvas>
            </div>

            <div class="recommendations">
                <h3>💡 Recommendations to Reduce Consumption</h3>
                <div id="recommendationsList"></div>
            </div>
        </div>
    </div>

    <script>
        let chart = null;

        document.getElementById('electricityForm').addEventListener('submit', function(e) {
            e.preventDefault();
            calculateElectricity();
        });

        function calculateElectricity() {
            const kwh = parseFloat(document.getElementById('kwh').value);
            const price = parseFloat(document.getElementById('price').value);
            const people = parseInt(document.getElementById('people').value);
            const size = parseFloat(document.getElementById('size').value);
            const heating = parseFloat(document.getElementById('heating').value) || 0;
            const ac = parseFloat(document.getElementById('ac').value) || 0;

            const monthlyCost = kwh * price;
            const yearlyCost = monthlyCost * 12;
            const co2Emissions = kwh * 0.331; // kg CO2 per kWh in Spain

            const kwhPerPerson = kwh / people;
            const kwhPerM2 = kwh / size;

            let efficiency = 'Excellent';
            if (kwhPerPerson > 150 || kwhPerM2 > 4) efficiency = 'Needs Improvement';
            else if (kwhPerPerson > 100 || kwhPerM2 > 3) efficiency = 'Good';

            document.getElementById('monthlyCost').textContent = monthlyCost.toFixed(2) + '€';
            document.getElementById('yearlyCost').textContent = yearlyCost.toFixed(2) + '€';
            document.getElementById('co2Emissions').textContent = co2Emissions.toFixed(1) + 'kg';
            document.getElementById('efficiency').textContent = efficiency;

            createChart(kwh, monthlyCost, co2Emissions);
            generateRecommendations(kwh, kwhPerPerson, kwhPerM2, heating, ac, price);
            document.getElementById('results').style.display = 'block';
            document.getElementById('results').scrollIntoView({ behavior: 'smooth' });
        }

        function createChart(kwh, cost, co2) {
            const ctx = document.getElementById('consumptionChart').getContext('2d');

            if (chart) chart.destroy();

            const scenarios = {
                actual: { kwh: kwh, cost: cost, co2: co2 },
                led: { kwh: kwh * 0.9, cost: cost * 0.9, co2: co2 * 0.9 },
                efficient: { kwh: kwh * 0.8, cost: cost * 0.8, co2: co2 * 0.8 },
                renewable: { kwh: kwh * 0.7, cost: cost * 0.6, co2: co2 * 0.3 }
            };

            chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Current Consumption', 'With LED', 'Efficient Appliances', 'With Renewables'],
                    datasets: [
                        {
                            label: 'Monthly Cost (€)',
                            data: [scenarios.actual.cost, scenarios.led.cost, scenarios.efficient.cost, scenarios.renewable.cost],
                            backgroundColor: 'rgba(102, 126, 234, 0.8)',
                            borderColor: '#667eea',
                            borderWidth: 2,
                            yAxisID: 'y'
                        },
                        {
                            label: 'CO₂ Emissions (kg)',
                            data: [scenarios.actual.co2, scenarios.led.co2, scenarios.efficient.co2, scenarios.renewable.co2],
                            backgroundColor: 'rgba(118, 75, 162, 0.8)',
                            borderColor: '#764ba2',
                            borderWidth: 2,
                            yAxisID: 'y1'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    scales: {
                        x: {
                            display: true,
                            title: {
                                display: true,
                                text: 'Saving Scenarios'
                            }
                        },
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Cost (€)'
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'CO₂ (kg)'
                            },
                            grid: {
                                drawOnChartArea: false,
                            },
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: 'Comparison of Consumption and Emissions by Scenario'
                        },
                        legend: {
                            display: true
                        }
                    }
                }
            });
        }

        function generateRecommendations(kwh, kwhPerPerson, kwhPerM2, heating, ac, price) {
            const recommendations = [];

            if (kwhPerPerson > 120) {
                recommendations.push({
                    title: 'Switch to LED bulbs',
                    description: 'Replace all incandescent and halogen bulbs with LED.',
                    savings: '10-15% of total consumption',
                    monthlySaving: (kwh * 0.12 * price).toFixed(2)
                });
            }

            if (kwhPerM2 > 3.5) {
                recommendations.push({
                    title: 'Improve thermal insulation',
                    description: 'Install better insulation in windows and walls.',
                    savings: '15-25% on heating/cooling',
                    monthlySaving: (kwh * 0.2 * price).toFixed(2)
                });
            }

            if (heating > 4) {
                recommendations.push({
                    title: 'Optimize heating usage',
                    description: 'Set temperature to 19-20°C and use a timer.',
                    savings: '20-30% on heating',
                    monthlySaving: (kwh * 0.25 * price).toFixed(2)
                });
            }

            if (ac > 3) {
                recommendations.push({
                    title: 'Efficient use of air conditioning',
                    description: 'Maintain 24-26°C and use a timer.',
                    savings: '15-20% on cooling',
                    monthlySaving: (kwh * 0.18 * price).toFixed(2)
                });
            }

            recommendations.push({
                title: 'Efficient appliances',
                description: 'Replace appliances with A+++ models when upgrading.',
                savings: '10-20% of consumption',
                monthlySaving: (kwh * 0.15 * price).toFixed(2)
            });

            recommendations.push({
                title: 'Install solar panels',
                description: 'Consider photovoltaic panels for self-consumption.',
                savings: '30-50% of your bill',
                monthlySaving: (kwh * price * 0.4).toFixed(2)
            });

            recommendations.push({
                title: 'Unplug standby devices',
                description: 'Use power strips with switches and unplug chargers.',
                savings: '5-10% of consumption',
                monthlySaving: (kwh * 0.08 * price).toFixed(2)
            });

            const container = document.getElementById('recommendationsList');
            container.innerHTML = '';

            recommendations.forEach(rec => {
                const item = document.createElement('div');
                item.className = 'recommendation-item';
                item.innerHTML = `
                    <div class="recommendation-title">${rec.title}</div>
                    <div>${rec.description}</div>
                    <div class="recommendation-savings">Potential savings: ${rec.savings} (≈${rec.monthlySaving}€/month)</div>
                `;
                container.appendChild(item);
            });
        }
    </script>
</body>
</html>
