@page
@model RazorPage.Pages.MapPageModel
@{
    ViewData["Title"] = "Map";
}
<html>
  <head>
    <title>Map with markers</title>
    <meta charset="utf-8" />
    <style>
      #map {
        height: 500px;
        width: 100%;
      }
      
    body {
        font-family: Arial, sans-serif;
        background-color: #f0f4f8; 
        margin: 0;
        padding: 0;
    }

    .container {
        width: 80%;
        margin: auto;
        overflow: hidden;
    }

    header {
        background-color: #333;
        color: white;
        padding: 20px 0;
        text-align: center;
    }

    

    footer {
        background-color: #333;
        color: white;
        text-align: center;
        padding: 15px;
        margin-top: 20px;
    }
    
    </style>
  </head>
  <body>
    <h3>Maps with the companies</h3>
    <p>Click on the markers to go see the details!!</p>
    <div id="map"></div>
    <script>
      // Function that starts the map using new Google Maps API
      async function initMap() {
        console.log("Iniciando mapa con nueva API...");
        // Request needed libraries
        const { Map } = await google.maps.importLibrary("maps");
        const { Marker } = await google.maps.importLibrary("marker");
        // Coords Barcelona
        const ubicacion = { lat: 41.3818, lng: 2.1685 };
        // Create mapa
        const mapa = new Map(document.getElementById("map"), {
          zoom: 12,
          center: ubicacion,
          mapId: "DEMO_MAP_ID", // Required for API
        });
        console.log("Mapa creado exitosamente");
        @if (Model.Addresses != null && Model.Addresses.Any())
        {
            <text>
                          // Usar Html.Raw con JsonSerializer y escapar correctamente
                          const direccionesJson = @Html.Raw(Json.Serialize(Model.Addresses.Select(a => new { lat = (double)a.Lat, lng = (double)a.Lng, location = a.Location, companyId = a.CompanyId })));
                          const direcciones = direccionesJson;
                          console.log("Direcciones cargadas:", direcciones);
                          // Recorrer las direcciones y crear marcadores
                          direcciones.forEach(function(direccion) {
                            console.log("Creando marcador para:", direccion.location);
                            const marcador = new Marker({
                              position: { lat: direccion.lat, lng: direccion.lng },
                              map: mapa,
                              title: "Direction: " + direccion.location
                            });

                            // Agregar click listener para abrir Google Maps
                            marcador.addListener('click', function() {
                            // Crear URL para Google Maps con las coordenadas
                            window.open(`/DetailCompany?id=${direccion.companyId}`, '_self');
                                });
                          });
                          console.log("Todos los marcadores creados");
            </text>
        }
        else
        {
            <text>
                          console.log("No hay direcciones para mostrar");
                          // Crear un marcador de ejemplo en Barcelona
                          const marcadorEjemplo = new Marker({
                            position: ubicacion,
                            map: mapa,
                            title: "Barcelona - Sin datos"
                          });
            </text>
        }
      }
    </script>
    <!-- Load API of Google Maps -->
    <script>
      (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
        key: "AIzaSyAEFByuNPdNP8BxEX_pwZAeNma8nycfSPk", // API
        v: "weekly",
      });
      // Initialize the map after the API loads
      google.maps.importLibrary("maps").then(() => {
        initMap();
      });
    </script>
  </body>
</html>